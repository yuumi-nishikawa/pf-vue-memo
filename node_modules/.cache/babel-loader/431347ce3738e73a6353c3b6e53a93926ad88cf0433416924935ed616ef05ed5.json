{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport { createStore } from 'vuex';\nimpo;\nexport default createStore({\n  state: {\n    count: 0,\n    memos: []\n  },\n  getters: {\n    getCount: state => {\n      return state.memos.length;\n    },\n    getAll: state => {\n      return state.memos;\n    },\n    getMemoById: state => id => {\n      // findは配列の中から条件に合うものを探す\n      // ここではidが一致するものを探している\n      return state.memos.find(memo => memo.id === id);\n    }\n  },\n  mutations: {\n    // メモを保存する\n    save(state, newMemo) {\n      if (newMemo.id) {\n        let x = state.memos.find(memo => memo.id === newMemo.id);\n        x.title = newMemo.title;\n        x.text = newMemo.text;\n      } else {\n        // idを付与する\n        // ++でカウントアップ\n        newMemo.id = ++state.count;\n        // 配列の先頭に追加するのがunshift\n        state.memos.unshift(newMemo);\n      }\n    },\n    // メモを削除する\n    delete(state, id) {\n      state.memos = state.memos.filter(memo => memo.id !== id);\n    }\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"names":["createStore","impo","state","count","memos","getters","getCount","length","getAll","getMemoById","id","find","memo","mutations","save","newMemo","x","title","text","unshift","delete","filter","actions","modules"],"sources":["/Users/yuumi/Desktop/memopad/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimpo\n\nexport default createStore({\n  state: {\n    count: 0,\n    memos:[]\n  },\n  getters: {\n    getCount:(state) => {\n      return state.memos.length\n    },\n    getAll:(state) => {\n      return state.memos\n    },\n    getMemoById:(state) => (id) => {\n      // findは配列の中から条件に合うものを探す\n      // ここではidが一致するものを探している\n      return state.memos.find((memo) => memo.id === id)\n    }\n  },\n  mutations: {\n    // メモを保存する\n    save(state, newMemo) {\n      if (newMemo.id) {\n        let x = state.memos.find((memo) => memo.id === newMemo.id)\n        x.title = newMemo.title\n        x.text = newMemo.text\n      } else {\n      // idを付与する\n      // ++でカウントアップ\n      newMemo.id = ++state.count\n      // 配列の先頭に追加するのがunshift\n      state.memos.unshift(newMemo)\n      }\n    },\n    // メモを削除する\n    delete(state, id) {\n      state.memos = state.memos.filter((memo) => memo.id !== id)\n    }\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClCC,IAAI;AAEJ,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,KAAK,EAAE,CAAC;IACRC,KAAK,EAAC;EACR,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,EAAEJ,KAAK,IAAK;MAClB,OAAOA,KAAK,CAACE,KAAK,CAACG,MAAM;IAC3B,CAAC;IACDC,MAAM,EAAEN,KAAK,IAAK;MAChB,OAAOA,KAAK,CAACE,KAAK;IACpB,CAAC;IACDK,WAAW,EAAEP,KAAK,IAAMQ,EAAE,IAAK;MAC7B;MACA;MACA,OAAOR,KAAK,CAACE,KAAK,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;IACnD;EACF,CAAC;EACDG,SAAS,EAAE;IACT;IACAC,IAAIA,CAACZ,KAAK,EAAEa,OAAO,EAAE;MACnB,IAAIA,OAAO,CAACL,EAAE,EAAE;QACd,IAAIM,CAAC,GAAGd,KAAK,CAACE,KAAK,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKK,OAAO,CAACL,EAAE,CAAC;QAC1DM,CAAC,CAACC,KAAK,GAAGF,OAAO,CAACE,KAAK;QACvBD,CAAC,CAACE,IAAI,GAAGH,OAAO,CAACG,IAAI;MACvB,CAAC,MAAM;QACP;QACA;QACAH,OAAO,CAACL,EAAE,GAAG,EAAER,KAAK,CAACC,KAAK;QAC1B;QACAD,KAAK,CAACE,KAAK,CAACe,OAAO,CAACJ,OAAO,CAAC;MAC5B;IACF,CAAC;IACD;IACAK,MAAMA,CAAClB,KAAK,EAAEQ,EAAE,EAAE;MAChBR,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACE,KAAK,CAACiB,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;IAC5D;EACF,CAAC;EACDY,OAAO,EAAE,CACT,CAAC;EACDC,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}