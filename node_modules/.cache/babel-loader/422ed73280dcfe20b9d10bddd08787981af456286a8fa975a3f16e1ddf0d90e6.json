{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$options.hasMemos ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.memos, memo => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: memo.id\n    }, _toDisplayString(memo.title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$options","hasMemos","_hoisted_2","_Fragment","_renderList","memos","memo","key","id","title"],"sources":["/Users/yuumi/Desktop/memopad/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <ul v-if=\"hasMemos\">\n      <li v-for=\"memo in memos\" :key=\"memo.id\">\n        {{ memo.title }}\n      </li>\n    </ul>\n    \n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HomeView',\n  computed: {\n    hasMemos(){\n      return this.$store.state.memos.length\n    },\n    memos(){\n      return this.$store.state.memos\n    }\n  }\n}\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;;;;uBAAjBC,mBAAA,CAOM,OAPNC,UAOM,GANMC,QAAA,CAAAC,QAAQ,I,cAAlBH,mBAAA,CAIK,MAAAI,UAAA,I,kBAHHJ,mBAAA,CAEKK,SAAA,QAAAC,WAAA,CAFcJ,QAAA,CAAAK,KAAK,EAAbC,IAAI;yBAAfR,mBAAA,CAEK;MAFsBS,GAAG,EAAED,IAAI,CAACE;wBAChCF,IAAI,CAACG,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}